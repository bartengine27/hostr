---
# tasks file for pza.docker - based on https://docs.docker.com/engine/install/ubuntu/
- name: Install Docker dependencies
  ansible.builtin.package:
    name:
      - ca-certificates
      - curl
      - dnf-command(config-manager)
    state: latest
    update_cache: true

- name: Install keyring
  ansible.builtin.shell: |
    install -m 0755 -d /etc/apt/keyrings
    curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
    chmod a+r /etc/apt/keyrings/docker.asc
    echo \
    "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
    $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
    tee /etc/apt/sources.list.d/docker.list > /dev/null
  when: ansible_facts['os_family'] == "Debian"

- name: Add the Docker repository
  ansible.builtin.shell: |
    dnf config-manager --add-repo https://download.docker.com/linux/rhel/docker-ce.repo
  when: ansible_facts['os_family'] == "RedHat"

- name: Install Docker
  ansible.builtin.package:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-buildx-plugin
      - docker-compose-plugin
    state: latest
    update_cache: true

- name: Install python pip
  ansible.builtin.package:
    name: python3-pip
    state: latest

- name: Install python docker library modules
  ansible.builtin.pip:
    name: docker

- name: Place docker daemon configuration file
  ansible.builtin.template:
    src: daemon.json.j2
    dest: /etc/docker/daemon.json
    owner: root
    group: root
    mode: '0644'

- name: Add the users with a bash shell, appending the group 'docker' to the user's groups
  ansible.builtin.user:
    name: "{{ item.name }}"
    shell: /bin/bash
    groups: docker
    append: true
  loop: "{{ docker_users }}"

- name: Create .ssh directory
  ansible.builtin.file:
    path: "/home/{{ item.name }}/.ssh"
    state: directory
    owner: "{{ item.name }}"
    group: "{{ item.name }}"
    mode: '0700'
  loop: "{{ docker_users }}"

- name: Set authorized key for the new user
  ansible.builtin.copy:
    dest: "/home/{{ item.name }}/.ssh/authorized_keys"
    content: "{{ item.pubkey }}"
    owner: "{{ item.name }}"
    group: "{{ item.name }}"
    mode: '0600'
  loop: "{{ docker_users }}"

- name: Enable service docker, ensure it is not masked
  ansible.builtin.systemd:
    name: docker
    enabled: true
    masked: false
    daemon_reload: true
    state: restarted

- name: Enable service containerd, ensure it is not masked
  ansible.builtin.systemd:
    name: containerd
    enabled: true
    masked: false
    daemon_reload: true
    state: restarted
