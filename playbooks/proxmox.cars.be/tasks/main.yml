---
- name: Upload new openvz template with minimal options
  community.general.proxmox_template:
    node: "{{ proxmox_node }}"
    api_user: "{{ proxmox_api_user }}"
    api_token_id: "{{ proxmox_api_token_id }}"
    api_token_secret: "{{ proxmox_api_token }}"
    api_host: "{{ proxmox_ip_address }}"
    src: ./ubuntu-14.04-x86_64.tar.gz
  tags: example_upload

- name: Download proxmox appliance container template - https://pve.proxmox.com/wiki/Linux_Container
  community.general.proxmox_template:
    node: "{{ proxmox_node }}"
    api_user: "{{ proxmox_api_user }}"
    api_token_id: "{{ proxmox_api_token_id }}"
    api_token_secret: "{{ proxmox_api_token }}"
    api_host: "{{ proxmox_ip_address }}"
    storage: local
    content_type: vztmpl
    #template: ubuntu-23.04-standard_23.04-1_amd64.tar.zst
    template: ubuntu-20.04-standard_20.04-1_amd64.tar.gz
  tags: vm_upload

- name: Create a new container to run dockers on - the container/vm is based on an uploaded Proxmox template
  community.general.proxmox:
    # vars_files:
    # vmid: "{{ proxmox_vm_id }}"
    vmid: "{{ item['id'] }}"
    tags: "{{ item['group'] }}"
    node: "{{ proxmox_node }}"
    api_user: "{{ proxmox_api_user }}"
    api_token_id: "{{ proxmox_api_token_id }}"
    api_token_secret: "{{ proxmox_api_token }}"
    api_host: "{{ proxmox_ip_address }}"
    password: bartbart
    hostname: cars.be.vm
    disk: local-lvm:20
    storage: local-lvm
    memory: 4096
    ostemplate: 'local:vztmpl/ubuntu-20.04-standard_20.04-1_amd64.tar.gz'
    # should query gw from proxmox? ask proxmox for a free ip address?
    netif: '{"net0":"name=eth0,gw=192.168.1.1,ip={{ item["ip"] }}/24,bridge=vmbr0"}'    
    pubkey: "{{ lookup('ansible.builtin.env', 'SSH_PUB_KEY') }}"
    state: present
    features:
     # enable nesting, otherwise docker containers won't run
     # if not enabled, you will *not* get errors after starting containers
      - nesting=1
  loop: "{{ proxmox_vms }}"
  tags: vm_init

- name: Start our new container
  community.general.proxmox:
    vmid: "{{ item['id'] }}"
    node: "{{ proxmox_node }}"
    api_user: "{{ proxmox_api_user }}"
    api_token_id: "{{ proxmox_api_token_id }}"
    api_token_secret: "{{ proxmox_api_token }}"
    api_host: "{{ proxmox_ip_address }}"
    state: started
    # wait so we know that SSH is working
    # timeout: 900
  loop: "{{ proxmox_vms }}"
  tags: vm_init

- name: Sleep for x seconds to wait for the new container
  ansible.builtin.wait_for:
    timeout: 30
  tags: vm_init

- name: Stop our container
  community.general.proxmox:
    vmid: "{{ item['id'] }}"
    node: "{{ proxmox_node }}"
    api_user: "{{ proxmox_api_user }}"
    api_token_id: "{{ proxmox_api_token_id }}"
    api_token_secret: "{{ proxmox_api_token }}"
    api_host: "{{ proxmox_ip_address }}"
    state: stopped
  loop: "{{ proxmox_vms }}"
  tags: vm_stop  

- name: Start our container
  community.general.proxmox:
    vmid: "{{ item['id'] }}"
    node: "{{ proxmox_node }}"
    api_user: "{{ proxmox_api_user }}"
    api_token_id: "{{ proxmox_api_token_id }}"
    api_token_secret: "{{ proxmox_api_token }}"
    api_host: "{{ proxmox_ip_address }}"
    state: started
  loop: "{{ proxmox_vms }}"
  tags: vm_start

- name: Restart our container
  community.general.proxmox:
    vmid: "{{ item['id'] }}"
    node: "{{ proxmox_node }}"
    api_user: "{{ proxmox_api_user }}"
    api_token_id: "{{ proxmox_api_token_id }}"
    api_token_secret: "{{ proxmox_api_token }}"
    api_host: "{{ proxmox_ip_address }}"
    state: restarted
  loop: "{{ proxmox_vms }}"
  tags: vm_restart

- name: Remove our container, you may have to log off/on in Proxmox before checking removal.
  community.general.proxmox:
    vmid: "{{ item['id'] }}"
    node: "{{ proxmox_node }}"
    api_user: "{{ proxmox_api_user }}"
    api_token_id: "{{ proxmox_api_token_id }}"
    api_token_secret: "{{ proxmox_api_token }}"
    api_host: "{{ proxmox_ip_address }}"
    state: absent
  loop: "{{ proxmox_vms }}"
  tags: vm_remove

- name: Sleep for x seconds to wait for removing the container
  ansible.builtin.wait_for:
    timeout: 30
  tags: vm_remove