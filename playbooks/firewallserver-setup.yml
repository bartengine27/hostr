- name: "Firewall and VPN setup playbook"
  hosts: firewall_public_ip
  remote_user: root  
  vars:
    wireguard_interface_name: wg0
    wireguard_port: "{{ lookup('ansible.builtin.env', 'WIREGUARD_PORT') }}"
    client_public_key: "{{ lookup('ansible.builtin.env', 'WIREGUARD_CLIENT_PUBLIC_KEY') }}"
    server_private_key: "{{ lookup('ansible.builtin.env', 'WIREGUARD_SERVER_PRIVATE_KEY') }}"
    server_public_ip: "{{ lookup('ansible.builtin.env', 'WIREGUARD_SERVER_PUBLIC_KEY') }}"
    vpn_network: 10.0.0.1/24
  tasks:    
    - name: Install resolvconf
      ansible.builtin.apt:
        name: resolvconf
        state: present

    - name: Install WireGuard
      ansible.builtin.package:
        name: wireguard
        state: present

    - name: Configure WireGuard Interface
      ansible.builtin.template:
        src: firewall_wg0.conf.j2
        dest: /etc/wireguard/{{ wireguard_interface_name }}.conf
        mode: '0600'
      notify: Restart WireGuard

    - name: Enable IP Forwarding
      ansible.builtin.sysctl:
        name: net.ipv4.ip_forward
        value: '1'
        state: present
        reload: yes

    - name: Allow SSH
      ansible.builtin.ufw:
        rule: allow
        port: 22
        proto: tcp

    - name: Allow WireGuard Traffic Through Firewall
      ansible.builtin.ufw:
        rule: allow
        port: "{{ wireguard_port }}"
        proto: udp

    - name: Start and Enable WireGuard Interface
      ansible.builtin.systemd:
        name: wg-quick@{{ wireguard_interface_name }}
        state: started
        enabled: yes

  handlers:
    - name: Restart WireGuard
      ansible.builtin.systemd:
        name: wg-quick@{{ wireguard_interface_name }}
        state: restarted